/* Memory Game Styles */
.memory-game-container {
    width: 100%;
    max-width: 800px;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
}

.memory-header {
    width: 100%;
    margin-bottom: 20px;
}

.memory-stats {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 10px;
    width: 100%;
}

.memory-stat {
    padding: 10px 15px;
    background-color: white;
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-sm);
    font-weight: 500;
}

.memory-stat i {
    margin-right: 5px;
    color: var(--purple);
}

.memory-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 15px;
    width: 100%;
    max-width: 600px;
    margin: 0 auto 20px;
    perspective: 1000px;
}

@media (max-width: 500px) {
    .memory-stats {
        flex-direction: column;
    }
    
    .memory-grid {
        gap: 10px;
    }
}

.memory-card {
    height: 0;
    padding-bottom: 100%;
    position: relative;
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-md);
    transform-style: preserve-3d;
    transition: transform 0.5s;
    cursor: pointer;
    background-color: #f8fafc;
    overflow: hidden;
}

.memory-card.flipped {
    transform: rotateY(180deg);
}

.memory-card.matched {
    border: 2px solid var(--green);
    box-shadow: 0 0 10px rgba(34, 197, 94, 0.5);
}

.card-front, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--radius-md);
}

.card-front {
    transform: rotateY(180deg);
    background-color: white;
    color: var(--text-primary);
}

.card-front span {
    font-size: 2.5rem;
    font-weight: 700;
}

.card-back {
    background: linear-gradient(135deg, #8b5cf6, #6366f1);
    color: white;
}

.card-back::after {
    content: "?";
    font-size: 2rem;
    color: rgba(255, 255, 255, 0.7);
}

/* Animations */
@keyframes matched {
    0%, 100% { transform: rotateY(180deg) scale(1); }
    50% { transform: rotateY(180deg) scale(1.1); }
}

.match-animation {
    animation: matched 0.5s ease;
}

@keyframes celebrate {
    0% { transform: rotateY(180deg) scale(1); }
    50% { transform: rotateY(180deg) scale(1.2); box-shadow: 0 0 20px rgba(139, 92, 246, 0.8); }
    100% { transform: rotateY(180deg) scale(1); }
}

.memory-card.celebrate {
    animation: celebrate 1s ease infinite;
}

/* Timing bar */
.memory-timer {
    width: 100%;
    height: 6px;
    background-color: #e2e8f0;
    border-radius: var(--radius-full);
    margin-top: 20px;
    overflow: hidden;
}

.memory-timer-bar {
    height: 100%;
    background: linear-gradient(to right, var(--purple), var(--blue));
    border-radius: var(--radius-full);
    transition: width 0.1s linear;
}

.memory-timer-bar.warning {
    background: linear-gradient(to right, var(--red), var(--yellow));
}

/* Feedback */
.memory-feedback {
    width: 100%;
    padding: 15px 20px;
    border-radius: var(--radius-md);
    text-align: center;
    font-size: 1.1rem;
    font-weight: 500;
    margin-bottom: 20px;
    transition: all 0.3s ease;
}

.memory-feedback.success {
    background-color: rgba(34, 197, 94, 0.1);
    color: var(--green);
}

.memory-feedback.failure {
    background-color: rgba(239, 68, 68, 0.1);
    color: var(--red);
}

.memory-feedback.level-complete {
    background-color: rgba(139, 92, 246, 0.1);
    color: var(--purple);
}

.hidden {
    display: none;
}